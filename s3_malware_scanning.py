import boto3
from botocore.exceptions import NoCredentialsError, PartialCredentialsError,ClientError
import time

s3_client = boto3.client('s3',region_name='us-east-1')

def upload_to_s3(file_name, bucket, object_name=None):
    # If S3 object_name was not specified, use file_name
    if object_name is None:
        object_name = file_name

    try:
        # Upload the file
        s3_client.upload_file(file_name, bucket, object_name)
        print(f"File '{file_name}' has been uploaded to '{bucket}/{object_name}'")
    except FileNotFoundError:
        print(f"The file '{file_name}' was not found")
    except NoCredentialsError:
        print("Credentials not available")
    except PartialCredentialsError:
        print("Incomplete credentials provided")
    except ClientError as e:
        print(f"An error occurred: {e.response['Error']['Message']}")

def get_s3_object_tags(bucket, object_key):
    try:
        print(f"Retrieving tags for: {object_key}")
        # Retrieve the tags of the specified S3 object
        response = s3_client.get_object_tagging(Bucket=bucket, Key=object_key)
        tags = response['TagSet']
        # Check if the 'GuardDutyMalwareScanStatus' tag is present and print its value
        max_retries=10
        while max_retries > 0:
            for tag in tags:
                if tag['Key'] == 'GuardDutyMalwareScanStatus':
                    print(f"GuardDutyMalwareScanStatus: {tag['Value']}")
                    return tag['Value']
                else:
                    print("Waiting for GuardDuty Malware Scan Status")
                    max_retries=max_retries-1
                    time.sleep(3)
        print("GuardDutyMalwareScanStatus tag not found")
        return None

    except s3_client.exceptions.NoSuchKey:
        print(f"The object '{object_key}' does not exist in bucket '{bucket_name}'")
    except NoCredentialsError:
        print("Credentials not available")
    except PartialCredentialsError:
        print("Incomplete credentials provided")
    except ClientError as e:
        print(f"An error occurred: {e.response['Error']['Message']}")

clean_file_name = 'clean_file.txt'
malicious_file_name = 'malicious_file.txt'
bucket_name = '<S3_BUCKET_NAME>'
upload_to_s3(clean_file_name, bucket_name)
time.sleep(3)
get_s3_object_tags(bucket_name, clean_file_name)
upload_to_s3(malicious_file_name, bucket_name)
time.sleep(3)
get_s3_object_tags(bucket_name, malicious_file_name)
